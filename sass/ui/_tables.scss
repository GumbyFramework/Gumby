/* Tables */

table {
	display: table;
	background-color: $table-bgcolor;
	border-collapse: collapse;
	border-spacing: 0;
	margin-bottom: 20px;
	width: 100%;
	border: $table-border-size $table-border-style $table-border-color;

	caption {
		text-align: center;
		font-size: $larger;
		padding: .75em;
	}

	thead th,
	tbody td,
	tr td {
		display: table-cell;
		padding: 10px;
		vertical-align: top;
		text-align: left;
		border-top: $table-cell-border-size $table-cell-border-style $table-cell-border-color;
	}

	tr td, tbody tr td {
		font-size: $norm;
	}

	tr td:first-child {
		font-weight: $table-row-first-cell-font-weight;
	}

	thead {
		background-color: $table-thead-bgcolor;
		color: #fff;

		tr th {
			font-size: $norm;
			font-weight: bold;
			vertical-align: bottom;
		}
	}

	&.striped tr:nth-of-type(even),
	table tr.stripe,
	table tr.striped {
		background-color: $table-stripe-bgcolor;
	}

	&.rounded {
		border-radius: $table-border-radius;
		border-collapse: separate;

		caption + thead tr:first-child th:first-child,
		caption + tr td:first-child,
		> thead tr:first-child th:first-child,
		> thead tr:first-child td:first-child,
		> tr:first-child td:first-child {
			border-top-left-radius: $table-border-radius;
		}

		caption + thead tr:first-child th:last-child,
		caption + tr td:last-child,
		> thead tr:first-child th:last-child,
		> thead tr:first-child td:last-child,
		> tr:first-child td:last-child {
			border-top-right-radius: $table-border-radius;
		}

		thead ~ tr:last-child td:last-child,
		tbody tr:last-child td:last-child {
			border-bottom-right-radius: $table-border-radius;
		}

		thead ~ tr:last-child td:first-child,
		tbody tr:last-child td:first-child {
			border-bottom-left-radius: $table-border-radius;
		}

		thead th, thead td,
		caption + tbody tr:first-child td,
		> tbody:first-child tr:first-child td {
			border-top: 0;
		}
	}
}

/* Mobile first styles: Begin with the stacked presentation at narrow widths */ 
@media only all {
	.reflow {
		/* Hide the table headers */ 
		thead {
			td, th {
				display: none;
			}
		}

		/* Show the table cells as a block level element */ 
		td, th {
			text-align: left;
			display: block;
			@include font-size($norm);

			/* Make the label elements a percentage width */
			b.ui-table-cell-label {
				padding: .4em; 
				min-width: 30%; 
				display: inline-block;
				margin: -.4em 1em -.4em -.4em;
				font-weight: bold;
				@include font-size($med);
			}

			/* For grouped headers, have a different style to visually separate the levels by classing the first label in each col group */ 
			b.ui-table-cell-label-top {
				display: block;
				padding: .4em 0;
				margin: .4em 0;
				text-transform: uppercase;
				@include font-size($large);
				font-weight: normal;
			}
		}

		/* Add a fair amount of top margin to visually separate each row when stacked */
		tbody {
			th {
				margin-top: 3em;
			}
		}
	}
}

@media ( min-width: $table-reflow-breakpoint ) {
	.reflow {
		display: table-row-group;

		@mixin showheaderrows() {
			display: table-cell;
			margin: 0;

			.ui-table-cell-label {
				display: none;
			}
		}

		td, th {
			@include showheaderrows();
		}

		tbody {
			td, th {
				@include showheaderrows();
			}
		}

		thead {
			td, th {
				@include showheaderrows();
			}
		}
	}
}


/* Hack to make IE9 and WP7.5 treat cells like block level elements, scoped to ui-responsive class */ 
/* Applied in a max-width media query up to the table layout breakpoint so we don't need to negate this*/ 
@media ( max-width: $table-reflow-breakpoint ) {
	.ui-table-reflow {
		td, th {
			width: 100%;
			@include box-sizing(border-box);
			float: left;
			clear: left;
		}
	}
}
